# Generated by Django 3.2.4 on 2022-05-15 14:54

import account.jwt.jwt_account_interface
import account.models.athlete
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('discount', '0001_initial'),
        ('financial', '0001_initial'),
        ('crm', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='نام کامل')),
                ('account_type', models.CharField(choices=[('ATHLETE', 'ورزشکار'), ('GYM_OWNER', 'صاحب ورزشگاه')], max_length=128, verbose_name='نوع حساب کاربری')),
                ('crm_account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='account', to='crm.crmaccount', verbose_name='حساب کاربری سی\u200cآرام')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='account', to=settings.AUTH_USER_MODEL, verbose_name='یوزر جنگو')),
                ('wallet', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='account', to='financial.wallet', verbose_name='کیف پول')),
            ],
            options={
                'verbose_name': 'حساب کاربری',
                'verbose_name_plural': 'حساب\u200cهای کاربری',
            },
            bases=(account.jwt.jwt_account_interface.JWTAccountInterface, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.account')),
                ('phone_number', models.CharField(max_length=32, unique=True, verbose_name='شماره همراه')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'مرد'), ('FEMALE', 'زن')], max_length=64, null=True, verbose_name='جنسیت')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('referral_code', models.CharField(default=account.models.athlete.generate_referral_code, max_length=16, verbose_name='کد معرفی')),
            ],
            options={
                'verbose_name': 'ورزشکار',
                'verbose_name_plural': 'ورزشکاران',
            },
            bases=('account.account', models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='GymOwner',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.account')),
                ('phone_number', models.CharField(max_length=32, unique=True, verbose_name='شماره همراه')),
                ('shaba', models.CharField(blank=True, max_length=32, null=True, verbose_name='شماره شبا')),
            ],
            options={
                'verbose_name': 'صاحب ورزشگاه',
                'verbose_name_plural': 'صاحبان ورزشگاه',
            },
            bases=('account.account', models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('file', models.FileField(upload_to='profile_pictures', verbose_name='فایل')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_pictures', to='account.account', verbose_name='صاحب عکس')),
            ],
            options={
                'verbose_name': 'عکس پروفایل',
                'verbose_name_plural': 'عکس\u200cهای پروفایل\u200cها',
            },
        ),
        migrations.CreateModel(
            name='HistoricalGymOwner',
            fields=[
                ('account_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='account.account')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='نام کامل')),
                ('account_type', models.CharField(choices=[('ATHLETE', 'ورزشکار'), ('GYM_OWNER', 'صاحب ورزشگاه')], max_length=128, verbose_name='نوع حساب کاربری')),
                ('phone_number', models.CharField(db_index=True, max_length=32, verbose_name='شماره همراه')),
                ('shaba', models.CharField(blank=True, max_length=32, null=True, verbose_name='شماره شبا')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('crm_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='crm.crmaccount', verbose_name='حساب کاربری سی\u200cآرام')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='یوزر جنگو')),
                ('wallet', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial.wallet', verbose_name='کیف پول')),
            ],
            options={
                'verbose_name': 'historical صاحب ورزشگاه',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAthleteDiscount',
            fields=[
                ('discount_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='discount.discount')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('code', models.CharField(max_length=32, verbose_name='کد تخفیف')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pricing_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='discount.discountpricingtype', verbose_name='نحوه قیمت\u200cگذاری')),
            ],
            options={
                'verbose_name': 'historical تخفیف اختصاصی ورزشکار',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAthlete',
            fields=[
                ('account_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='account.account')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='نام کامل')),
                ('account_type', models.CharField(choices=[('ATHLETE', 'ورزشکار'), ('GYM_OWNER', 'صاحب ورزشگاه')], max_length=128, verbose_name='نوع حساب کاربری')),
                ('phone_number', models.CharField(db_index=True, max_length=32, verbose_name='شماره همراه')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'مرد'), ('FEMALE', 'زن')], max_length=64, null=True, verbose_name='جنسیت')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('referral_code', models.CharField(default=account.models.athlete.generate_referral_code, max_length=16, verbose_name='کد معرفی')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('crm_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='crm.crmaccount', verbose_name='حساب کاربری سی\u200cآرام')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='یوزر جنگو')),
                ('wallet', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial.wallet', verbose_name='کیف پول')),
            ],
            options={
                'verbose_name': 'historical ورزشکار',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccount',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='نام کامل')),
                ('account_type', models.CharField(choices=[('ATHLETE', 'ورزشکار'), ('GYM_OWNER', 'صاحب ورزشگاه')], max_length=128, verbose_name='نوع حساب کاربری')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('crm_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='crm.crmaccount', verbose_name='حساب کاربری سی\u200cآرام')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='یوزر جنگو')),
                ('wallet', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial.wallet', verbose_name='کیف پول')),
            ],
            options={
                'verbose_name': 'historical حساب کاربری',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAthleteReferral',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('referred_athlete', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.athlete', verbose_name='ورزشکار معرفی شده')),
                ('referrer_athlete', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.athlete', verbose_name='ورزشکار معرف')),
            ],
            options={
                'verbose_name': 'historical معرفی ورزشکار',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='AthleteReferral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='آیا حذف شده است؟')),
                ('referred_athlete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral', to='account.athlete', verbose_name='ورزشکار معرفی شده')),
                ('referrer_athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='account.athlete', verbose_name='ورزشکار معرف')),
            ],
            options={
                'verbose_name': 'معرفی ورزشکار',
                'verbose_name_plural': 'معرفی\u200cهای ورزشکار',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AthleteDiscount',
            fields=[
                ('discount_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discount.discount')),
                ('athletes', models.ManyToManyField(related_name='discounts', to='account.Athlete', verbose_name='تبلیغ\u200cکننده')),
            ],
            options={
                'verbose_name': 'تخفیف اختصاصی ورزشکار',
                'verbose_name_plural': 'تخفیف\u200cهای اختصاصی ورزشکار',
            },
            bases=('discount.discount',),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
